<!-- @@master  = _layout.ejs  {"pagename":"vue"} -->
<!-- @@block  =  specific_stylesheet-->
<!-- <link rel="stylesheet" type="text/css" href="css/unit/vue.css" /> -->
<style>
[v-cloak] {
  /* display: none; */
  color:  red;
  font-size: 50px;
}
h1{
	font-size: 26px;
}
div[id]{
	line-height: 1.5;
	margin-bottom: 3em;
}
</style>
<!-- @@close-->

<!-- @@block  =  specific_javascript-->
<script src="https://unpkg.com/vue"></script>
<!-- <script src="js/unit/vue.js"></script> -->
<script>
	var app = new Vue({
		el: '#app',
		data: {
			message: 'Hello Vue!'
		}
	})
	var app2 = new Vue({
		el: '#app-2',
		data: {
			message: '页面加载于 ' + new Date().toLocaleString()
		}
	})
	var app3 = new Vue({
		el: '#app-3',
		data: {
			seen: false
		}
	})
	var app4 = new Vue({
		el: '#app-4',
		data: {
			todos: [
			{ 	text: '学习 JavaScript',
			memo: '123'
		},{ 
			text: '学习 Vue',
			memo: '456'
		},{
			text: '整个牛项目',
			memo: '789'
		}
		]
	}
})
	var app5 = new Vue({
		el: '#app-5',
		data: {
			message: 'Hello Vue.js!'
		},
		methods: {
			reverseMessage: function () {
				this.message = this.message.split('').reverse().join('')
			}
		}
	})
	var app6 = new Vue({
		el: '#app-6',
		data: {
			message: 'Hello Vue!'
		},
		watch: {
			message: function(){
				console.log("message changed, it is:" + this.message );
			}
		}
	})
	Vue.component('todo-item', {
		props: ['todo'],
		template: '<li>{{ todo.id }}'+' : '+'{{ todo.text }}</li>'
	})
	var app7 = new Vue({
		el: '#app-7',
		data: {
			groceryList: [
			{ id: 0, text: '蔬菜' },
			{ id: 1, text: '奶酪' },
			{ id: 2, text: '随便其他什么人吃的东西' },
			{ id: 3, text: '123456' }
			]
		}
	})

</script>
<!-- @@close-->
<!-- @@block  =  content-->
<section class="section-vue">
	<h1>https://cn.vuejs.org/v2/guide/index.html</h1>
	<div id="app">
		<p v-cloak>{{ message }}</p>
		<p v-text="message"></p >
	</div>
	<div id="app-2">
		<span v-bind:title="message">
			鼠标悬停几秒钟查看此处动态绑定的提示信息！
		</span>
	</div>
	<div id="app-3">
		<p v-if="seen">现在你看到我了</p>
	</div>
	<div id="app-4">
		<ol>
			<li v-for="todo in todos">
				{{ todo.text }}
				<br>
				<b>{{ todo.memo }} ~~!</b>
			</li>
		</ol>
	</div>
	<div id="app-5">
		<p>{{ message }}</p>
		<button v-on:click="reverseMessage">逆转消息</button>
	</div>
	<div id="app-6">
		<p>控制項</p>
		<input v-model="message">
		<p>單純被控制</p>
		<p>{{ message }}</p>
		<input type="text" v-bind:value="message">
		<br>
		<textarea name="" id="" cols="10" rows="3">{{ message }}</textarea> 自體編輯過就無法再被更新?
		<p>互相控制</p>
		<input type="text" v-model="message">
		<br>
		<textarea name="" id="" cols="10" rows="3" v-model="message"></textarea>
	</div>
	<div id="app-7">
		<ol>
	    <!--
	      现在我们为每个 todo-item 提供 todo 对象
	      todo 对象是变量，即其内容可以是动态的。
	      我们也需要为每个组件提供一个“key”，晚些时候我们会做个解释。
	  -->
	  <todo-item
	  v-for="item in groceryList"
	  v-bind:todo="item"
	  v-bind:key="item.id">
	</todo-item>
</ol>
</div>
</section>
<!-- @@close-->

